# Generated by Django 5.0.4 on 2024-04-24 21:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amenity',
            fields=[
                ('a_type', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=20)),
                ('building_name', models.CharField(max_length=20)),
                ('addr_num', models.IntegerField()),
                ('addr_street', models.CharField(max_length=20)),
                ('addr_city', models.CharField(max_length=20)),
                ('addr_state', models.CharField(max_length=5)),
                ('addr_zip_code', models.CharField(max_length=5)),
                ('year_built', models.IntegerField()),
            ],
            options={
                'unique_together': {('company_name', 'building_name')},
            },
        ),
        migrations.CreateModel(
            name='ApartmentUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.CharField(max_length=10)),
                ('monthly_rent', models.IntegerField()),
                ('square_footage', models.IntegerField()),
                ('available_date_for_move_in', models.DateField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='add_post.apartmentbuilding')),
            ],
        ),
        migrations.CreateModel(
            name='PetPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pet_type', models.CharField(max_length=50)),
                ('pet_size', models.CharField(max_length=20)),
                ('is_allowed', models.BooleanField()),
                ('registration_fee', models.IntegerField(blank=True, null=True)),
                ('monthly_fee', models.IntegerField(blank=True, null=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pet_policies', to='add_post.apartmentbuilding')),
            ],
            options={
                'unique_together': {('building', 'pet_type', 'pet_size')},
            },
        ),
        migrations.CreateModel(
            name='Provides',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee', models.IntegerField()),
                ('waiting_list', models.IntegerField()),
                ('amenity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buildings', to='add_post.amenity')),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provided_amenities', to='add_post.apartmentbuilding')),
            ],
            options={
                'unique_together': {('building', 'amenity')},
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('square_footage', models.IntegerField()),
                ('description', models.CharField(max_length=50)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='add_post.apartmentunit')),
            ],
            options={
                'unique_together': {('name', 'unit')},
            },
        ),
    ]
